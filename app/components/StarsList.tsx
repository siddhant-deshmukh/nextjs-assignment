import React from 'react'

export default function StarsList({ count }: { count: number }) {
  const countInt = Math.floor(count)
  const emptyStar = Math.floor(5 - count)
  return (
    <div className='stars-list'>
      {
        Array(countInt).fill(countInt).map((_, index) => {
          return <svg key={index} width="12" height="11" viewBox="0 0 12 11" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M5.68926 0L3.95021 3.61194L0 4.19479L2.86158 7.04149L2.17754 11L5.68926 9.09502L9.20171 11L8.52271 7.04149L11.3793 4.19479L7.45095 3.61194L5.68926 0Z" fill="#FFB80F" />
          </svg>
        })
      }
      {
        countInt != count &&
        <svg width="12" height="11" viewBox="0 0 12 11" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fillRule="evenodd" clipRule="evenodd" d="M6.66535 0.223529C6.59821 0.0862699 6.45995 -0.000392342 6.3086 1.33562e-06C6.15783 0.000394982 6.02014 0.0877758 5.95357 0.225384L4.4276 3.38229L0.960614 3.89202C0.811147 3.91399 0.686941 4.02003 0.640172 4.1656C0.593346 4.31116 0.632091 4.47103 0.740081 4.57806L3.25212 7.06804L2.65226 10.5279C2.62597 10.6795 2.68725 10.833 2.81015 10.9233C2.93293 11.0137 3.09622 11.0251 3.22993 10.9527L6.30974 9.28801L9.39069 10.9527C9.5244 11.025 9.68712 11.0137 9.81002 10.9234C9.93291 10.8332 9.99436 10.6799 9.96819 10.5284L9.37249 7.06804L11.8805 4.57781C11.9886 4.47077 12.0273 4.31103 11.9806 4.16558C11.9334 4.02013 11.8094 3.91414 11.6603 3.89206L8.21179 3.38228L6.66535 0.223529ZM6.28357 8.43045C6.3564 8.4255 6.43036 8.44095 6.49636 8.47681L9.04646 9.85467L8.55488 6.99786C8.53212 6.86729 8.57479 6.73392 8.6681 6.64113L10.7528 4.57128L7.89147 4.14831C7.76231 4.12926 7.65079 4.0473 7.59333 3.929L6.33762 1.36471L6.28357 8.43045Z" fill="#FFB80F" />
        </svg>
      }
      {
        Array(emptyStar).fill(countInt).map((_, index) => {
          return <svg key={index} width="12" height="11" viewBox="0 0 12 11" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fillRule="evenodd" clipRule="evenodd" d="M6.66529 0.223529C6.59815 0.0862697 6.45989 -0.000392343 6.30912 1.33562e-06C6.15777 0.000394982 6.02008 0.0877762 5.95351 0.225383L4.42812 3.38229L0.960614 3.89202C0.811147 3.91399 0.686941 4.02003 0.640172 4.1656C0.593346 4.31116 0.632091 4.47103 0.740081 4.57806L3.25206 7.06805L2.6522 10.5279C2.62592 10.6795 2.68725 10.833 2.81009 10.9233C2.93287 11.0137 3.09617 11.0251 3.22987 10.9527L6.30969 9.28802L9.39063 10.9527C9.52434 11.025 9.68707 11.0137 9.80996 10.9234C9.93286 10.8332 9.99431 10.6799 9.96813 10.5284L9.37243 7.06805L11.8804 4.57782C11.9885 4.47077 12.0272 4.31103 11.9806 4.16558C11.9333 4.02013 11.8093 3.91414 11.6602 3.89206L8.21174 3.38229L6.66529 0.223529ZM5.04886 3.92714L6.31196 1.31239L7.59327 3.929C7.6513 4.0473 7.76225 4.12926 7.89141 4.14831L10.7527 4.57128L8.66805 6.64114C8.57474 6.73387 8.53206 6.8673 8.55482 6.99787L9.04641 9.85468L6.49688 8.47682C6.37967 8.41379 6.2397 8.41379 6.12306 8.47688L3.57524 9.85396L4.07024 6.99837C4.093 6.86752 4.05089 6.73376 3.95701 6.64092L1.86931 4.57172L4.74901 4.14836C4.87874 4.12928 4.99082 4.0465 5.04886 3.92714Z" fill="#FFB80F" />
          </svg>
        })
      }
    </div>
  )
}
